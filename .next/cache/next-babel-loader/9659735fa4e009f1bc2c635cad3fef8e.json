{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/shinoda/Desktop/LabApp/components/Fireadd.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Router from 'next/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nvar Fireadd =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fireadd, _Component);\n\n  function Fireadd(props) {\n    var _this;\n\n    _classCallCheck(this, Fireadd);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Fireadd).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      heigth: '7em',\n      width: '350px',\n      lineHeight: '1.5em'\n    });\n\n    _this.state = {\n      msg_str: '',\n      lastID: -1,\n      data: []\n    };\n\n    _this.getLastID();\n\n    _this.doChangeMsg = _this.doChangeMsg.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Fireadd, [{\n    key: \"doChangeMsg\",\n    value: function doChangeMsg(e) {\n      this.setState({\n        msg_str: e.target.value\n      });\n    }\n  }, {\n    key: \"doAction\",\n    value: function doAction(e) {\n      this.addFireData();\n      Router.push('/contact_board');\n    }\n  }, {\n    key: \"getLastID\",\n    value: function getLastID() {\n      var db = firebase.database();\n      var ref = db.ref('sample/');\n      var self = this;\n      ref.orderByKey().limitToLast(1).on(\"value\", function (snapshot) {\n        var res = snapshot.val();\n\n        for (var i in res) {\n          self.setState({\n            lastID: i\n          });\n          return;\n        }\n      });\n    }\n  }, {\n    key: \"addFireData\",\n    value: function addFireData() {\n      if (this.state.lastID == -1) {\n        return;\n      }\n\n      var id = this.state.lastID * 1 + 1;\n      var db = firebase.database();\n      var date = new Date().toString().slice(4, 10);\n      var ref = db.ref('/sample/' + id);\n      ref.set({\n        ID: id,\n        message: this.state.msg_str,\n        date: date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.lastID == -1) {\n        this.getLastID();\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(\"from\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __jsx(\"textarea\", {\n        style: this.style,\n        placeholder: \"type message:\",\n        onChange: this.doChangeMsg,\n        value: this.state.msg_str,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this.doAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\\u65B0\\u898F\\u6295\\u7A3F\")));\n    }\n  }]);\n\n  return Fireadd;\n}(Component);\n\nexport default Fireadd;","map":{"version":3,"sources":["/Users/shinoda/Desktop/LabApp/components/Fireadd.jsx"],"names":["React","Component","firebase","Router","FontAwesomeIcon","faChevronRight","Fireadd","props","heigth","width","lineHeight","state","msg_str","lastID","data","getLastID","doChangeMsg","bind","doAction","e","setState","target","value","addFireData","push","db","database","ref","self","orderByKey","limitToLast","on","snapshot","res","val","i","id","date","Date","toString","slice","set","ID","message","style"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Router from 'next/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nclass Fireadd extends Component {\n\n    style = {\n        heigth:'7em',\n        width:'350px',\n        lineHeight: '1.5em'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            msg_str:'',\n            lastID: -1,\n            data: []\n        }\n        this.getLastID();\n        this.doChangeMsg = this.doChangeMsg.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    doChangeMsg(e) {\n        this.setState({\n            msg_str: e.target.value\n        })\n    }\n\n    doAction(e) {\n        this.addFireData();\n        Router.push('/contact_board');\n    }\n\n    getLastID() {\n        let db = firebase.database();\n        let ref = db.ref('sample/');\n        let self = this;\n        ref\n        .orderByKey()\n        .limitToLast(1)\n        .on(\"value\", snapshot => {\n            let res = snapshot.val();\n            for(let i in res) {\n                self.setState({\n                lastID: i\n                });\n                return;\n            }\n        });\n    }\n\n    addFireData() {\n        if (this.state.lastID == -1) {\n            return;\n        }\n        let id = this.state.lastID * 1 + 1;\n        let db = firebase.database();\n        let date = new Date().toString().slice(4,10);\n        let ref = db.ref('/sample/' + id);\n        ref.set({\n            ID: id,\n            message: this.state.msg_str,\n            date: date\n        });\n    }\n\n    render() {\n        if(this.state.lastID == -1) {\n            this.getLastID();\n        }\n        return (\n            <div>\n                <from>\n                    <textarea style={this.style} placeholder='type message:' onChange={this.doChangeMsg} value={this.state.msg_str} />\n                    <br />\n                    \n                    <button onClick={this.doAction}>新規投稿</button>\n                </from>\n            </div>\n        );\n    }\n}\n\nexport default Fireadd;"]},"metadata":{},"sourceType":"module"}