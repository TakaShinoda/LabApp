{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/shinoda/Desktop/LabApp/components/Fireadd.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Router from 'next/router';\n\nclass Fireadd extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      heigth: '7em',\n      width: '350px',\n      lineHeight: '1.5em'\n    });\n\n    this.state = {\n      msg_str: '',\n      lastID: -1,\n      data: []\n    };\n    this.getLastID();\n    this.doChangeMsg = this.doChangeMsg.bind(this);\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doChangeMsg(e) {\n    this.setState({\n      msg_str: e.target.value\n    });\n  }\n\n  doAction(e) {\n    this.addFireData();\n    Router.push('/contact_board');\n  } //最後のID取得\n\n\n  getLastID() {\n    let db = firebase.database();\n    let ref = db.ref('sample/');\n    let self = this;\n    ref.orderByKey().limitToLast(1).on(\"value\", snapshot => {\n      let res = snapshot.val();\n\n      for (let i in res) {\n        self.setState({\n          lastID: i\n        });\n        return;\n      }\n    });\n  }\n\n  addFireData() {\n    if (this.state.lastID == -1) {\n      return;\n    }\n\n    let id = this.state.lastID * 1 + 1;\n    let db = firebase.database();\n    let timestamp = firebase.database.ServerValue.TIMESTAMP;\n    var d = new Date(1245398693390);\n    var formattedDate = d.getDate() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getFullYear();\n    var hours = d.getHours() < 10 ? \"0\" + d.getHours() : d.getHours();\n    var minutes = d.getMinutes() < 10 ? \"0\" + d.getMinutes() : d.getMinutes();\n    var formattedTime = hours + \":\" + minutes;\n    formattedDate = formattedDate + \" \" + formattedTime;\n    let ref = db.ref('/sample/' + id);\n    ref.set({\n      ID: id,\n      message: this.state.msg_str,\n      date: timestamp\n    });\n  }\n\n  render() {\n    if (this.state.lastID == -1) {\n      this.getLastID();\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"textarea\", {\n      style: this.style,\n      placeholder: \"type message....\",\n      onChange: this.doChangeMsg,\n      value: this.state.msg_str,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.doAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\u65B0\\u898F\\u6295\\u7A3F\"));\n  }\n\n}\n\nexport default Fireadd;","map":{"version":3,"sources":["/Users/shinoda/Desktop/LabApp/components/Fireadd.jsx"],"names":["React","Component","firebase","Router","Fireadd","constructor","props","heigth","width","lineHeight","state","msg_str","lastID","data","getLastID","doChangeMsg","bind","doAction","e","setState","target","value","addFireData","push","db","database","ref","self","orderByKey","limitToLast","on","snapshot","res","val","i","id","timestamp","ServerValue","TIMESTAMP","d","Date","formattedDate","getDate","getMonth","getFullYear","hours","getHours","minutes","getMinutes","formattedTime","set","ID","message","date","render","style"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Router from 'next/router';\n\nclass Fireadd extends Component {\n\n    style = {\n        heigth:'7em',\n        width:'350px',\n        lineHeight: '1.5em'\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            msg_str:'',\n            lastID: -1,\n            data: []\n        }\n        this.getLastID();\n        this.doChangeMsg = this.doChangeMsg.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    doChangeMsg(e) {\n        this.setState({\n            msg_str: e.target.value\n        })\n    }\n\n    doAction(e) {\n        this.addFireData();\n        Router.push('/contact_board');\n    }\n\n    //最後のID取得\n    getLastID() {\n        let db = firebase.database();\n        let ref = db.ref('sample/');\n        let self = this;\n        ref\n        .orderByKey()\n        .limitToLast(1)\n        .on(\"value\", snapshot => {\n            let res = snapshot.val();\n            for(let i in res) {\n                self.setState({\n                lastID: i\n                });\n                return;\n            }\n        });\n    }\n\n    addFireData() {\n        if (this.state.lastID == -1) {\n            return;\n        }\n        let id = this.state.lastID * 1 + 1;\n        let db = firebase.database();\n        let timestamp = firebase.database.ServerValue.TIMESTAMP;\n        var d = new Date(1245398693390);\n            var formattedDate = d.getDate() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getFullYear();\n            var hours = (d.getHours() < 10) ? \"0\" + d.getHours() : d.getHours();\n            var minutes = (d.getMinutes() < 10) ? \"0\" + d.getMinutes() : d.getMinutes();\n            var formattedTime = hours + \":\" + minutes;\n            formattedDate = formattedDate + \" \" + formattedTime;\n        let ref = db.ref('/sample/' + id);\n        ref.set({\n            ID: id,\n            message: this.state.msg_str,\n            date: timestamp\n        });\n    }\n\n    render() {\n        if(this.state.lastID == -1) {\n            this.getLastID();\n        }\n        return (\n            <div>\n                <textarea style={this.style} placeholder='type message....' onChange={this.doChangeMsg} value={this.state.msg_str} />\n                <button onClick={this.doAction}>\n                    新規投稿\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Fireadd;"]},"metadata":{},"sourceType":"module"}